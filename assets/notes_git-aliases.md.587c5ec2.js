import{_ as e,c as t,o as a,a as i}from"./app.e0c95fc9.js";const u='{"title":"Git Aliases","description":"","frontmatter":{},"headers":[],"relativePath":"notes/git-aliases.md"}',s={},o=i(`<h1 id="git-aliases" tabindex="-1">Git Aliases <a class="header-anchor" href="#git-aliases" aria-hidden="true">#</a></h1><p>After quite some time repeating the cycle of staging changes and commiting them, I&#39;ve finally taken some time to try to break out of this loop. I was sure there were several solutions to this, maybe a bash script, some special flag, or git command to perform this in a single action. I found on <a href="https://stackoverflow.com/questions/2419249/how-can-i-stage-and-commit-all-files-including-newly-added-files-using-a-singl" target="_blank" rel="noopener noreferrer">SOF</a> a much better solution than I expected.</p><p>Git already provides a way to have a better experience with repetitive commands: <a href="https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases" target="_blank" rel="noopener noreferrer">Git Aliases</a>. To quote the git documentation, it is used to create <em>commands that you think should exist</em>. We can use an Alias and Git will simply execute the commands stored in the alias.</p><p>To set an alias:</p><div class="language-"><pre><code>git config --global alias.coa &#39;!git add -A &amp;&amp; git commit -m&#39;
</code></pre></div><p>The global flag will make this alias available throughout all projects. The name of the alias is set with dot notation. To use it:</p><div class="language-"><pre><code>git coa &#39;Commit message&#39;
</code></pre></div><p>Which looks smoother than:</p><div class="language-"><pre><code>git add -A
git commit -m &#39;Comit message&#39;
</code></pre></div><p>Other good usage, illustraded in the <a href="https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases" target="_blank" rel="noopener noreferrer">git docs</a>, is to check the last commit. Instead of entering the <code>git log</code> visualization, it&#39;s simpler to set an alias:</p><div class="language-"><pre><code>git config --global alias.last &#39;log -1 HEAD&#39;
</code></pre></div><p>Then, <code>git last</code> will present the last commit directly.</p>`,12),n=[o];function l(r,c,d,m,g,h){return a(),t("div",null,n)}var _=e(s,[["render",l]]);export{u as __pageData,_ as default};
